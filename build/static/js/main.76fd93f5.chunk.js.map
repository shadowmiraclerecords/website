{"version":3,"sources":["smr.png","App.js","reportWebVitals.js","index.js"],"names":["stripe","loadStripe","App","props","state","results","total","items","updateTheTotal","bind","onChange","handleStripePayment","handleStripeResult","this","setState","value","console","log","result","error","message","DOMAIN","redirectToCheckout","mode","lineItems","price","quantity","successUrl","cancelUrl","then","className","src","logo","alt","name","method","action","type","placeholder","width","height","onClick","data-checkout-mode","data-price-id","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,MAA0B,gC,sBCYnCA,EAASC,YAAW,+GAwFXC,E,kDApFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,MAAO,EACPC,MAAO,IAET,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,oBAAsB,EAAKA,oBAAL,gBAC3B,EAAKC,mBAAqB,EAAKA,mBAAL,gBAVT,E,kDAanB,WACEC,KAAKC,SAAS,CAACR,MAAOO,KAAKT,MAAME,MAAQ,O,sBAG3C,SAASS,GACPC,QAAQC,IAAI,iBAAkBF,K,gCAGhC,SAAmBG,GACjBL,KAAKC,SAAS,CAACT,QAASa,EAAOC,MAAMC,Y,iCAGvC,WACE,IAEMC,EAAS,iBAEfrB,EAAOsB,mBAAmB,CACxBC,KAAM,UACNC,UAAW,CAAC,CAAEC,MAAO,EAAGC,SAAU,IAClCC,WACEN,EAAS,gDACXO,UACEP,EAAS,mDACVQ,KAAKhB,KAAKD,sB,oBAGf,WAAU,IAEND,EAEEE,KAFFF,oBACAH,EACEK,KADFL,eAEF,OACE,qBAAKsB,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,uBAAMC,KAAK,QAAQC,OAAO,OAAOC,OAAO,kCAAxC,yBACc,uBAAOC,KAAK,QAAQH,KAAK,WAAWI,YAAY,UAE5D,uBAAOD,KAAK,SAAStB,MAAM,YAQ7B,sBAAKe,UAAU,YAAf,UACE,qBAAKC,IAAKC,EAAMC,IAAI,MAAMM,MAAM,MAAMC,OAAO,QAC7C,uBACA,wBAAQC,QAASjC,EAAjB,kCAGA,uBACA,sDACmBK,KAAKT,MAAME,YAGhC,wBAAQyB,IAAI,8BACZ,wBAAQW,qBAAmB,UAAUC,gBAAc,qBAAqBF,QAAS9B,EAAjF,wC,GAzEUiC,IAAMC,WCHTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.76fd93f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/smr.0e534e62.png\";","import logo from './smr.png';\nimport React from \"react\";\n// import {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport './App.css';\n\n// import ReCAPTCHA from \"react-google-recaptcha\";\n\n// const stripePromise = loadStripe('pk_test_51IWVXgLK0vLBTfXTBSMyEiRmQTzC14wWWTaKuJVoSvCeCeQtlHFWFSETdH0lebmaTg5UWAH01GZCqiWIYuWH4dzT00tjajonTm');\n\n// const stripe = await loadStripe('pk_test_51IWVXgLK0vLBTfXTBSMyEiRmQTzC14wWWTaKuJVoSvCeCeQtlHFWFSETdH0lebmaTg5UWAH01GZCqiWIYuWH4dzT00tjajonTm');\n\nconst stripe = loadStripe('pk_test_51IWVXgLK0vLBTfXTBSMyEiRmQTzC14wWWTaKuJVoSvCeCeQtlHFWFSETdH0lebmaTg5UWAH01GZCqiWIYuWH4dzT00tjajonTm');\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      results: \"\",\n      total: 0,\n      items: {}\n    };\n    this.updateTheTotal = this.updateTheTotal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleStripePayment = this.handleStripePayment(this);\n    this.handleStripeResult = this.handleStripeResult(this);\n  }\n\n  updateTheTotal() {\n    this.setState({total: this.state.total + 50});\n  }\n\n  onChange(value) {\n    console.log(\"Captcha value:\", value);\n  }\n\n  handleStripeResult(result) {\n    this.setState({results: result.error.message});\n  }\n\n  handleStripePayment() {\n    const PUBLISHABLE_KEY = \"pk_test_51IWVXgLK0vLBTfXTBSMyEiRmQTzC14wWWTaKuJVoSvCeCeQtlHFWFSETdH0lebmaTg5UWAH01GZCqiWIYuWH4dzT00tjajonTm\";\n    // const DOMAIN = location.href.replace(/[^/]*$/, '');\n    const DOMAIN = \"localhost:3000\";\n    // var stripe = Stripe(PUBLISHABLE_KEY);\n    stripe.redirectToCheckout({\n      mode: \"payment\",\n      lineItems: [{ price: 1, quantity: 1 }],\n      successUrl:\n        DOMAIN + 'success.html?session_id={CHECKOUT_SESSION_ID}',\n      cancelUrl:\n        DOMAIN + 'canceled.html?session_id={CHECKOUT_SESSION_ID}',\n    }).then(this.handleStripeResult);\n  }\n\n  render() {\n    const {\n      handleStripePayment,\n      updateTheTotal\n    } = this;\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <form name=\"input\" method=\"POST\" action=\"https://formspree.io/f/xvovedjb\">\n          Subscribe(: <input type=\"email\" name=\"_replyto\" placeholder=\"email\">\n          </input>\n          <input type=\"submit\" value=\"Send\"></input>\n          {/* <ReCAPTCHA\n            // sitekey=\"6LfOLYUaAAAAAAb9C7HdYcjYSi4csM2IttV8Z4SK\"\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n            // sitekey=\"6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe\"\n            onChange={onChange}\n          /> */}\n        </form>\n        <div className=\"container\">\n          <img src={logo} alt=\"CDS\" width=\"100\" height=\"100\"></img>\n          <br></br>\n          <button onClick={updateTheTotal}>\n            Add This To The Cart\n          </button>\n          <br></br>\n          <button>\n            Go To Checkout ${this.state.total}\n          </button>\n        </div>\n        <script src=\"https://js.stripe.com/v3/\"></script>\n        <button data-checkout-mode=\"payment\" data-price-id=\"sku_GU4JYXyvvRb2sX\" onClick={handleStripePayment}>\n          Donate $5.00 once\n        </button>\n        {/* <Elements stripe={stripePromise}>\n          <MyCheckoutForm />\n        </Elements> */}\n      </header>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}