{"version":3,"sources":["smr.png","App.js","reportWebVitals.js","index.js"],"names":["stripePromise","loadStripe","App","props","changeHandler","e","setState","target","name","value","valid","EmailValidator","state","disable","submitHandler","preventDefault","console","log","handleClick","a","redirectToCheckout","mode","lineItems","price","quantity","successUrl","cancelUrl","shippingAddressCollection","allowedCountries","then","handleStripeResult","results","display","email","total","items","updateTheTotal","bind","onChange","enableBtn","onSubmit","makeApiCall","this","data","axios","post","response","request","status","catch","error","document","getElementById","disabled","token","submit","collection","type","placeholder","id","onClick","className","src","logo","alt","width","height","scrolling","frameBorder","allow","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.93dc505d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/smr.0e534e62.png\";","import logo from './smr.png';\nimport React from \"react\";\nimport {loadStripe} from '@stripe/stripe-js';\nimport './App.css';\nimport axios from 'axios';\nimport * as EmailValidator from 'email-validator';\nvar stripePromise = loadStripe('pk_test_51IWVXgLK0vLBTfXTBSMyEiRmQTzC14wWWTaKuJVoSvCeCeQtlHFWFSETdH0lebmaTg5UWAH01GZCqiWIYuWH4dzT00tjajonTm');\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      results: \"\",\n      disable: true,\n      display: true,\n      email: \"\",\n      total: 0,\n      items: {}\n    };\n    this.updateTheTotal = this.updateTheTotal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.enableBtn = this.enableBtn.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n    this.makeApiCall = this.makeApiCall.bind(this);\n  }\n\n  async makeApiCall() {\n    const email = this.state.email;\n    const api = 'https://api.shadowmiraclerecords.com/write';\n    const data = { \"email\" : email };\n    axios\n      .post(api, data)\n      .then((response) => {\n        console.log(response);\n        if (response.request.status === 200) {\n          this.setState({display: false});\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  changeHandler = (e) => {\n    this.setState({[e.target.name] : e.target.value});\n    const valid = EmailValidator.validate(e.target.value);\n    // console.log(valid);\n    // console.log(e.target.value);\n    if (this.state.disable && valid) {\n      this.setState({disable: false});\n    }\n    if (!this.state.disable && !valid) {\n      this.setState({disable: true});\n    }\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n    console.log(this.state);\n  }\n\n  updateTheTotal() {\n    this.setState({total: this.state.total + 50});\n  }\n\n  onChange(value) {\n    console.log(\"Captcha value:\", value);\n  }\n\n  enableBtn(){\n    document.getElementById(\"button1\").disabled = false;\n  }\n\n  handleClick = async () => {\n    // Get Stripe.js instance\n    const stripe = await stripePromise;\n\n    stripe.redirectToCheckout({\n      mode: \"payment\",\n      lineItems: [{ price: \"price_1IWsTeLK0vLBTfXTLTnSRPph\", quantity: 1 }],\n      // successUrl:\n      //   'success.html?session_id={CHECKOUT_SESSION_ID}',\n      // cancelUrl:\n      //   'canceled.html?session_id={CHECKOUT_SESSION_ID}',\n      successUrl:\n        'https://shadowmiraclerecords.github.io/website/',\n      cancelUrl:\n        'https://shadowmiraclerecords.github.io/website/',\n      shippingAddressCollection: {\n        allowedCountries: ['US'],\n      }\n    }).then(this.handleStripeResult);\n  };\n\n  onSubmit(token) {\n    document.getElementById(\"demo-form\").submit();\n  }\n\n  render() {\n    const { email, disable, display } = this.state;\n    const {\n      // handleClick,\n      makeApiCall\n    } = this;\n    let collection;\n    if (display) {\n      collection = <div>\n        Sign up to hear more:\n        <form name=\"input\">\n          <input type=\"email\" placeholder=\"email\" name=\"email\" value={email} onChange={this.changeHandler}></input>\n        </form>\n        <button id=\"testing\" disabled={disable} onClick={makeApiCall}>Submit</button>\n      </div>\n    } else {\n      collection = <div>Thanks for your info</div>\n    }\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {/* <form name=\"input\">\n          <input type=\"email\" placeholder=\"email\" name=\"email\" value={email} onChange={this.changeHandler}></input>\n        </form>\n        <button id=\"testing\" disabled={disable} onClick={makeApiCall}>Submit</button> */}\n        {collection}\n        {/* <button role=\"link\" onClick={handleClick}>\n          Store\n        </button> */}\n        <iframe width=\"75%\" height=\"160\" scrolling=\"no\" frameBorder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/1000565353&color=%23080808&auto_play=false&hide_related=true&show_comments=true&show_user=true&show_reposts=false&show_teaser=false&visual=false\"></iframe>\n      </header>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}