{"version":3,"sources":["smr.png","App.js","reportWebVitals.js","index.js"],"names":["stripePromise","loadStripe","App","props","handleClick","a","redirectToCheckout","mode","lineItems","price","quantity","successUrl","cancelUrl","shippingAddressCollection","allowedCountries","then","handleStripeResult","state","results","total","items","updateTheTotal","bind","onChange","this","setState","value","console","log","className","src","logo","alt","name","method","action","type","placeholder","role","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAe,MAA0B,gC,sBCMrCA,EAAgBC,YAAW,+GAqFhBC,E,kDAlFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAmBRC,YApBmB,sBAoBL,sBAAAC,EAAA,sEAESL,EAFT,cAILM,mBAAmB,CACxBC,KAAM,UACNC,UAAW,CAAC,CAAEC,MAAO,iCAAkCC,SAAU,IAKjEC,WACE,kDACFC,UACE,kDACFC,0BAA2B,CACzBC,iBAAkB,CAAC,SAEpBC,KAAK,EAAKC,oBAlBD,2CAlBZ,EAAKC,MAAQ,CACXC,QAAS,GACTC,MAAO,EACPC,MAAO,IAET,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKlB,YAAc,EAAKA,YAAYkB,KAAjB,gBATF,E,kDAYnB,WACEE,KAAKC,SAAS,CAACN,MAAOK,KAAKP,MAAME,MAAQ,O,sBAG3C,SAASO,GACPC,QAAQC,IAAI,iBAAkBF,K,oBAwBhC,WAAU,IAENtB,EAEEoB,KAFFpB,YAEEoB,KADFH,eAEF,OACE,qBAAKQ,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,uBAAMC,KAAK,QAAQC,OAAO,OAAOC,OAAO,kCAAxC,yBACc,uBAAOC,KAAK,QAAQH,KAAK,WAAWI,YAAY,UAE5D,uBAAOD,KAAK,SAASV,MAAM,YAmB7B,wBAAQI,IAAI,8BACZ,wBAAQQ,KAAK,OAAOC,QAASnC,EAA7B,4B,GA1EUoC,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2e2c3c3e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/smr.0e534e62.png\";","import logo from './smr.png';\nimport React from \"react\";\nimport {loadStripe} from '@stripe/stripe-js';\nimport './App.css';\n// import ReCAPTCHA from \"react-google-recaptcha\";\n\nvar stripePromise = loadStripe('pk_test_51IWVXgLK0vLBTfXTBSMyEiRmQTzC14wWWTaKuJVoSvCeCeQtlHFWFSETdH0lebmaTg5UWAH01GZCqiWIYuWH4dzT00tjajonTm');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      results: \"\",\n      total: 0,\n      items: {}\n    };\n    this.updateTheTotal = this.updateTheTotal.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  updateTheTotal() {\n    this.setState({total: this.state.total + 50});\n  }\n\n  onChange(value) {\n    console.log(\"Captcha value:\", value);\n  }\n\n  handleClick = async () => {\n    // Get Stripe.js instance\n    const stripe = await stripePromise;\n\n    stripe.redirectToCheckout({\n      mode: \"payment\",\n      lineItems: [{ price: \"price_1IWsTeLK0vLBTfXTLTnSRPph\", quantity: 1 }],\n      // successUrl:\n      //   'success.html?session_id={CHECKOUT_SESSION_ID}',\n      // cancelUrl:\n      //   'canceled.html?session_id={CHECKOUT_SESSION_ID}',\n      successUrl:\n        'https://shadowmiraclerecords.github.io/website/',\n      cancelUrl:\n        'https://shadowmiraclerecords.github.io/website/',\n      shippingAddressCollection: {\n        allowedCountries: ['US'],\n      }\n    }).then(this.handleStripeResult);\n  };\n\n  render() {\n    const {\n      handleClick,\n      updateTheTotal\n    } = this;\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <form name=\"input\" method=\"POST\" action=\"https://formspree.io/f/xvovedjb\">\n          Subscribe(: <input type=\"email\" name=\"_replyto\" placeholder=\"email\">\n          </input>\n          <input type=\"submit\" value=\"Send\"></input>\n          {/* <ReCAPTCHA\n            // sitekey=\"6LfOLYUaAAAAAAb9C7HdYcjYSi4csM2IttV8Z4SK\"\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n            // sitekey=\"6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe\"\n            onChange={onChange}\n          /> */}\n        </form>\n        {/* <div className=\"container\">\n          <img src={logo} alt=\"CDS\" width=\"100\" height=\"100\"></img>\n          <br></br>\n          <button onClick={updateTheTotal}>\n            Add This To The Cart\n          </button>\n          <br></br>\n          <button>\n            Go To Checkout ${this.state.total}\n          </button>\n        </div> */}\n        <script src=\"https://js.stripe.com/v3/\"></script>\n        <button role=\"link\" onClick={handleClick}>\n          Store\n        </button>\n      </header>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}