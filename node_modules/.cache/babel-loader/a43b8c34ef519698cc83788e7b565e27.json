{"ast":null,"code":"var _jsxFileName = \"/Volumes/T7/website/src/App.js\";\n// import logo from './logo.svg';\nimport logo from './smr.png';\nimport React, { PureComponent } from \"react\";\nimport './App.css';\nimport { CartComponent, ProductComponent, CheckoutButtonComponent, cartLocalization } from \"react-shopping-cart\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"animate.css/animate.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  getDefaultLocalization\n} = cartLocalization; // You may take localization object from wherever you want, that's just an example\n// For more information, see localization section\n\nconst iPadCaseLocalization = {\n  color: \"Color\",\n  iPadCase: \"iPad case\",\n  red: \"Red\",\n  green: \"Green\",\n  yellow: \"Yellow\",\n  GBP: \"£\",\n  EUR: \"€\",\n  USD: \"$\"\n};\nconst iPadPropertiesWithAdditionalCostLocalization = {\n  yellow: \"Yellow (+{cost, number, CUR})\"\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: {}\n    };\n  }\n\n  updateTheTotal(product) {\n    const updated = { ...this.state.items,\n      product\n    };\n    this.setState({\n      items: updated\n    });\n  }\n\n  render() {\n    const {\n      addProduct,\n      generateProductKey,\n      updateProduct,\n      removeProduct,\n      updateTheTotal,\n      state\n    } = this;\n    const {\n      getProductLocalization,\n      getCheckoutButtonLocalization,\n      getCartLocalization,\n      products,\n      product\n    } = state;\n\n    const checkoutButtonElement = /*#__PURE__*/_jsxDEV(CheckoutButtonComponent, {\n      grandTotal: 500,\n      hidden: false,\n      checkoutURL: \"/to/my/checkout\",\n      currency: \"GBP\",\n      getLocalization: getCheckoutButtonLocalization\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"input\",\n          method: \"POST\",\n          action: \"https://formspree.io/f/xvovedjb\",\n          children: [\"Subscribe(:: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"_replyto\",\n            placeholder: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(ProductComponent, { ...product,\n            checkoutButton: checkoutButtonElement,\n            onAddProduct: (addProduct, updateTheTotal // Help product to get into the cart\n            ),\n            generateProductKey: generateProductKey // create product key as you wish\n            ,\n            getLocalization: getProductLocalization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(CartComponent, {\n            products: products // Provide your own product's Object(Look at Products)\n            ,\n            onUpdateProduct: updateProduct // Update something\n            ,\n            getLocalization: getCartLocalization,\n            currency: \"GBP\",\n            onRemoveProduct: removeProduct // Remove something\n            ,\n            checkoutButton: checkoutButtonElement,\n            isCartEmpty: false,\n            getLocalization: getCartLocalization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n} // class App extends PureComponent {\n//   state = {\n//     products: {},\n//     total: 0,\n//     product: {\n//       name: \"iPadCase\",\n//       id: \"ipad-case\",\n//       path: \"/shop/ipad-case/\",\n//       properties: {\n//         color: [\n//           \"red\",\n//           \"green\",\n//           {\n//             additionalCost: {\n//               GBP: 1,\n//               EUR: 2,\n//               USD: 3\n//             },\n//             value: \"blue\"\n//           }\n//         ]\n//       },\n//       propertiesToShowInCart: [\"color\"],\n//       prices: { GBP: 70, EUR: 82, USD: 100 },\n//       currency: \"USD\",\n//       imageSrc: \"smr.png\"\n//     },\n//     getProductLocalization: getDefaultLocalization(\"product\", \"en\", {\n//       ...iPadCaseLocalization,\n//       ...iPadPropertiesWithAdditionalCostLocalization\n//     }),\n//     getCheckoutButtonLocalization: getDefaultLocalization(\n//       \"checkoutButton\",\n//       \"en\",\n//       iPadCaseLocalization\n//     ),\n//     getCartLocalization: getDefaultLocalization(\n//       \"cart\",\n//       \"en\",\n//       iPadCaseLocalization\n//     )\n//   };\n//   addProduct = (key, product, currency) =>\n//     void this.setState(\n//       ({\n//         products: { [key]: cartProduct = { quantity: 0 }, ...restOfProducts }\n//       }) => ({\n//         products: {\n//           ...restOfProducts,\n//           [key]: {\n//             ...product,\n//             quantity: product.quantity + cartProduct.quantity\n//           }\n//         }\n//       })\n//     );\n//   updateTheTotal = (price) =>\n//   void this.setState(\n//     this.state.total = this.state.total + price\n//   )\n//   generateProductKey = (id, properties) =>\n//     `${id}/${Object.entries(properties).join(\"_\")}`;\n//   updateProduct = (key, updatedProduct) => void console.log(\":)\");\n//   removeProduct = key => void console.log(\":C\");\n//   render() {\n//     const {\n//       addProduct,\n//       generateProductKey,\n//       updateProduct,\n//       removeProduct,\n//       updateTheTotal,\n//       state\n//     } = this;\n//     const {\n//       getProductLocalization,\n//       getCheckoutButtonLocalization,\n//       getCartLocalization,\n//       products,\n//       product\n//     } = state;\n//     const checkoutButtonElement = (\n//       <CheckoutButtonComponent\n//         grandTotal={500}\n//         hidden={false}\n//         checkoutURL=\"/to/my/checkout\"\n//         currency=\"GBP\"\n//         getLocalization={getCheckoutButtonLocalization}\n//       />\n//     );\n//     return (\n//       <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <form name=\"input\" method=\"POST\" action=\"https://formspree.io/f/xvovedjb\">\n//           Subscribe(:: <input type=\"email\" name=\"_replyto\" placeholder=\"email\">\n//           </input>\n//           <input type=\"submit\" value=\"Send\"></input>\n//         </form>\n//         <div className=\"container\">\n//         <ProductComponent\n//           {...product}\n//           checkoutButton={checkoutButtonElement}\n//           onAddProduct={\n//             addProduct,\n//             updateTheTotal\n//             // Help product to get into the cart\n//           }\n//           generateProductKey={\n//             generateProductKey\n//             // create product key as you wish\n//           }\n//           getLocalization={getProductLocalization}\n//         />\n//         <CartComponent\n//           products={\n//             products\n//             // Provide your own product's Object(Look at Products)\n//           }\n//           onUpdateProduct={\n//             updateProduct\n//             // Update something\n//           }\n//           getLocalization={getCartLocalization}\n//           currency=\"GBP\"\n//           onRemoveProduct={\n//             removeProduct\n//             // Remove something\n//           }\n//           checkoutButton={checkoutButtonElement}\n//           isCartEmpty={false}\n//           getLocalization={getCartLocalization}\n//         />\n//       </div>\n//       </header>\n//     </div>\n//     );\n//   }\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Volumes/T7/website/src/App.js"],"names":["logo","React","PureComponent","CartComponent","ProductComponent","CheckoutButtonComponent","cartLocalization","getDefaultLocalization","iPadCaseLocalization","color","iPadCase","red","green","yellow","GBP","EUR","USD","iPadPropertiesWithAdditionalCostLocalization","App","Component","state","items","updateTheTotal","product","updated","setState","render","addProduct","generateProductKey","updateProduct","removeProduct","getProductLocalization","getCheckoutButtonLocalization","getCartLocalization","products","checkoutButtonElement"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport logo from './smr.png';\nimport React, { PureComponent } from \"react\";\nimport './App.css';\nimport {\n  CartComponent,\n  ProductComponent,\n  CheckoutButtonComponent,\n  cartLocalization\n} from \"react-shopping-cart\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"animate.css/animate.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nconst { getDefaultLocalization } = cartLocalization;\n\n// You may take localization object from wherever you want, that's just an example\n// For more information, see localization section\nconst iPadCaseLocalization = {\n  color: \"Color\",\n  iPadCase: \"iPad case\",\n  red: \"Red\",\n  green: \"Green\",\n  yellow: \"Yellow\",\n  GBP: \"£\",\n  EUR: \"€\",\n  USD: \"$\"\n};\n\nconst iPadPropertiesWithAdditionalCostLocalization = {\n  yellow: \"Yellow (+{cost, number, CUR})\"\n};\n\n\nclass App extends React.Component {\n  state = {\n    items: {}\n  };\n\n  addToCart \n\n  updateTheTotal(product) {\n    const updated = { ...this.state.items, product }\n    this.setState({items: updated})\n  }\n\n  render() {\n    const {\n      addProduct,\n      generateProductKey,\n      updateProduct,\n      removeProduct,\n      updateTheTotal,\n      state\n    } = this;\n\n    const {\n      getProductLocalization,\n      getCheckoutButtonLocalization,\n      getCartLocalization,\n      products,\n      product\n    } = state;\n\n    const checkoutButtonElement = (\n      <CheckoutButtonComponent\n        grandTotal={500}\n        hidden={false}\n        checkoutURL=\"/to/my/checkout\"\n        currency=\"GBP\"\n        getLocalization={getCheckoutButtonLocalization}\n      />\n    );\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <form name=\"input\" method=\"POST\" action=\"https://formspree.io/f/xvovedjb\">\n          Subscribe(:: <input type=\"email\" name=\"_replyto\" placeholder=\"email\">\n          </input>\n          <input type=\"submit\" value=\"Send\"></input>\n        </form>\n        <div className=\"container\">\n        <ProductComponent\n          {...product}\n          checkoutButton={checkoutButtonElement}\n          onAddProduct={\n            addProduct,\n            updateTheTotal\n            // Help product to get into the cart\n          }\n          generateProductKey={\n            generateProductKey\n            // create product key as you wish\n          }\n          getLocalization={getProductLocalization}\n        />\n\n        <CartComponent\n          products={\n            products\n            // Provide your own product's Object(Look at Products)\n          }\n          onUpdateProduct={\n            updateProduct\n            // Update something\n          }\n          getLocalization={getCartLocalization}\n          currency=\"GBP\"\n          onRemoveProduct={\n            removeProduct\n            // Remove something\n          }\n          checkoutButton={checkoutButtonElement}\n          isCartEmpty={false}\n          getLocalization={getCartLocalization}\n        />\n      </div>\n      </header>\n    </div>\n    );\n  }\n}\n\n// class App extends PureComponent {\n//   state = {\n//     products: {},\n//     total: 0,\n//     product: {\n//       name: \"iPadCase\",\n//       id: \"ipad-case\",\n//       path: \"/shop/ipad-case/\",\n//       properties: {\n//         color: [\n//           \"red\",\n//           \"green\",\n//           {\n//             additionalCost: {\n//               GBP: 1,\n//               EUR: 2,\n//               USD: 3\n//             },\n//             value: \"blue\"\n//           }\n//         ]\n//       },\n//       propertiesToShowInCart: [\"color\"],\n//       prices: { GBP: 70, EUR: 82, USD: 100 },\n//       currency: \"USD\",\n//       imageSrc: \"smr.png\"\n//     },\n//     getProductLocalization: getDefaultLocalization(\"product\", \"en\", {\n//       ...iPadCaseLocalization,\n//       ...iPadPropertiesWithAdditionalCostLocalization\n//     }),\n//     getCheckoutButtonLocalization: getDefaultLocalization(\n//       \"checkoutButton\",\n//       \"en\",\n//       iPadCaseLocalization\n//     ),\n//     getCartLocalization: getDefaultLocalization(\n//       \"cart\",\n//       \"en\",\n//       iPadCaseLocalization\n//     )\n//   };\n\n//   addProduct = (key, product, currency) =>\n//     void this.setState(\n//       ({\n//         products: { [key]: cartProduct = { quantity: 0 }, ...restOfProducts }\n//       }) => ({\n//         products: {\n//           ...restOfProducts,\n//           [key]: {\n//             ...product,\n//             quantity: product.quantity + cartProduct.quantity\n//           }\n//         }\n//       })\n//     );\n\n//   updateTheTotal = (price) =>\n//   void this.setState(\n//     this.state.total = this.state.total + price\n//   )\n\n//   generateProductKey = (id, properties) =>\n//     `${id}/${Object.entries(properties).join(\"_\")}`;\n\n//   updateProduct = (key, updatedProduct) => void console.log(\":)\");\n\n//   removeProduct = key => void console.log(\":C\");\n\n//   render() {\n//     const {\n//       addProduct,\n//       generateProductKey,\n//       updateProduct,\n//       removeProduct,\n//       updateTheTotal,\n//       state\n//     } = this;\n\n//     const {\n//       getProductLocalization,\n//       getCheckoutButtonLocalization,\n//       getCartLocalization,\n//       products,\n//       product\n//     } = state;\n\n//     const checkoutButtonElement = (\n//       <CheckoutButtonComponent\n//         grandTotal={500}\n//         hidden={false}\n//         checkoutURL=\"/to/my/checkout\"\n//         currency=\"GBP\"\n//         getLocalization={getCheckoutButtonLocalization}\n//       />\n//     );\n//     return (\n//       <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <form name=\"input\" method=\"POST\" action=\"https://formspree.io/f/xvovedjb\">\n//           Subscribe(:: <input type=\"email\" name=\"_replyto\" placeholder=\"email\">\n//           </input>\n//           <input type=\"submit\" value=\"Send\"></input>\n//         </form>\n//         <div className=\"container\">\n//         <ProductComponent\n//           {...product}\n//           checkoutButton={checkoutButtonElement}\n//           onAddProduct={\n//             addProduct,\n//             updateTheTotal\n//             // Help product to get into the cart\n//           }\n//           generateProductKey={\n//             generateProductKey\n//             // create product key as you wish\n//           }\n//           getLocalization={getProductLocalization}\n//         />\n\n//         <CartComponent\n//           products={\n//             products\n//             // Provide your own product's Object(Look at Products)\n//           }\n//           onUpdateProduct={\n//             updateProduct\n//             // Update something\n//           }\n//           getLocalization={getCartLocalization}\n//           currency=\"GBP\"\n//           onRemoveProduct={\n//             removeProduct\n//             // Remove something\n//           }\n//           checkoutButton={checkoutButtonElement}\n//           isCartEmpty={false}\n//           getLocalization={getCartLocalization}\n//         />\n//       </div>\n//       </header>\n//     </div>\n//     );\n//   }\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}