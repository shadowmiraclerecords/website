{"ast":null,"code":"var _jsxFileName = \"/Volumes/T7/website/src/App.js\";\n// import logo from './logo.svg';\nimport logo from './smr.png';\nimport React, { PureComponent } from \"react\";\nimport './App.css';\nimport { CartComponent, ProductComponent, CheckoutButtonComponent, cartLocalization } from \"react-shopping-cart\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"animate.css/animate.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  getDefaultLocalization\n} = cartLocalization; // You may take localization object from wherever you want, that's just an example\n// For more information, see localization section\n\nconst iPadCaseLocalization = {\n  color: \"Color\",\n  iPadCase: \"iPad case\",\n  red: \"Red\",\n  green: \"Green\",\n  yellow: \"Yellow\",\n  GBP: \"£\",\n  EUR: \"€\",\n  USD: \"$\"\n};\nconst iPadPropertiesWithAdditionalCostLocalization = {\n  yellow: \"Yellow (+{cost, number, CUR})\"\n};\n\nclass App extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: {},\n      total: 0,\n      product: {\n        name: \"iPadCase\",\n        id: \"ipad-case\",\n        path: \"/shop/ipad-case/\",\n        properties: {\n          color: [\"red\", \"green\", {\n            additionalCost: {\n              GBP: 1,\n              EUR: 2,\n              USD: 3.5\n            },\n            value: \"yellow\"\n          }]\n        },\n        propertiesToShowInCart: [\"color\"],\n        prices: {\n          GBP: 70,\n          EUR: 80,\n          USD: 100\n        },\n        currency: \"USD\",\n        imageSrc: \"smr.png\"\n      },\n      getProductLocalization: getDefaultLocalization(\"product\", \"en\", { ...iPadCaseLocalization,\n        ...iPadPropertiesWithAdditionalCostLocalization\n      }),\n      getCheckoutButtonLocalization: getDefaultLocalization(\"checkoutButton\", \"en\", iPadCaseLocalization),\n      getCartLocalization: getDefaultLocalization(\"cart\", \"en\", iPadCaseLocalization)\n    };\n\n    this.addProduct = (key, product, currency) => void this.setState(({\n      products: {\n        [key]: cartProduct = {\n          quantity: 0\n        },\n        ...restOfProducts\n      }\n    }) => ({\n      products: { ...restOfProducts,\n        [key]: { ...product,\n          quantity: product.quantity + cartProduct.quantity\n        }\n      }\n    }));\n\n    this.generateProductKey = (id, properties) => `${id}/${Object.entries(properties).join(\"_\")}`;\n\n    this.updateProduct = (key, updatedProduct) => void console.log(\":)\");\n\n    this.removeProduct = key => void console.log(\":C\");\n  }\n\n  render() {\n    const {\n      addProduct,\n      generateProductKey,\n      updateProduct,\n      removeProduct,\n      state\n    } = this;\n    const {\n      getProductLocalization,\n      getCheckoutButtonLocalization,\n      getCartLocalization,\n      products,\n      product\n    } = state;\n\n    const checkoutButtonElement = /*#__PURE__*/_jsxDEV(CheckoutButtonComponent, {\n      grandTotal: 500,\n      hidden: false,\n      checkoutURL: \"/to/my/checkout\",\n      currency: \"GBP\",\n      getLocalization: getCheckoutButtonLocalization\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"input\",\n          method: \"POST\",\n          action: \"https://formspree.io/f/xvovedjb\",\n          children: [\"Subscribe(:: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"_replyto\",\n            placeholder: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(ProductComponent, { ...product,\n            checkoutButton: checkoutButtonElement,\n            onAddProduct: addProduct // Help product to get into the cart\n            ,\n            generateProductKey: generateProductKey // create product key as you wish\n            ,\n            getLocalization: getProductLocalization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(CartComponent, {\n            products: products // Provide your own product's Object(Look at Products)\n            ,\n            onUpdateProduct: updateProduct // Update something\n            ,\n            getLocalization: getCartLocalization,\n            currency: \"GBP\",\n            onRemoveProduct: removeProduct // Remove something\n            ,\n            checkoutButton: checkoutButtonElement,\n            isCartEmpty: false,\n            getLocalization: getCartLocalization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n} // function App() {\n//   return (\n// <div className=\"App\">\n//   <header className=\"App-header\">\n//     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//     <form name=\"input\" method=\"POST\" action=\"https://formspree.io/f/xvovedjb\">\n//       Subscribe(: <input type=\"email\" name=\"_replyto\" placeholder=\"email\">\n//       </input>\n//       <input type=\"submit\" value=\"Send\"></input>\n//     </form>\n//   </header>\n// </div>\n//   );\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Volumes/T7/website/src/App.js"],"names":["logo","React","PureComponent","CartComponent","ProductComponent","CheckoutButtonComponent","cartLocalization","getDefaultLocalization","iPadCaseLocalization","color","iPadCase","red","green","yellow","GBP","EUR","USD","iPadPropertiesWithAdditionalCostLocalization","App","state","products","total","product","name","id","path","properties","additionalCost","value","propertiesToShowInCart","prices","currency","imageSrc","getProductLocalization","getCheckoutButtonLocalization","getCartLocalization","addProduct","key","setState","cartProduct","quantity","restOfProducts","generateProductKey","Object","entries","join","updateProduct","updatedProduct","console","log","removeProduct","render","checkoutButtonElement"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport logo from './smr.png';\nimport React, { PureComponent } from \"react\";\nimport './App.css';\nimport {\n  CartComponent,\n  ProductComponent,\n  CheckoutButtonComponent,\n  cartLocalization\n} from \"react-shopping-cart\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"animate.css/animate.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nconst { getDefaultLocalization } = cartLocalization;\n\n// You may take localization object from wherever you want, that's just an example\n// For more information, see localization section\nconst iPadCaseLocalization = {\n  color: \"Color\",\n  iPadCase: \"iPad case\",\n  red: \"Red\",\n  green: \"Green\",\n  yellow: \"Yellow\",\n  GBP: \"£\",\n  EUR: \"€\",\n  USD: \"$\"\n};\n\nconst iPadPropertiesWithAdditionalCostLocalization = {\n  yellow: \"Yellow (+{cost, number, CUR})\"\n};\n\nclass App extends PureComponent {\n  state = {\n    products: {},\n    total: 0,\n    product: {\n      name: \"iPadCase\",\n      id: \"ipad-case\",\n      path: \"/shop/ipad-case/\",\n      properties: {\n        color: [\n          \"red\",\n          \"green\",\n          {\n            additionalCost: {\n              GBP: 1,\n              EUR: 2,\n              USD: 3.5\n            },\n            value: \"yellow\"\n          }\n        ]\n      },\n      propertiesToShowInCart: [\"color\"],\n      prices: { GBP: 70, EUR: 80, USD: 100 },\n      currency: \"USD\",\n      imageSrc: \"smr.png\"\n    },\n    getProductLocalization: getDefaultLocalization(\"product\", \"en\", {\n      ...iPadCaseLocalization,\n      ...iPadPropertiesWithAdditionalCostLocalization\n    }),\n    getCheckoutButtonLocalization: getDefaultLocalization(\n      \"checkoutButton\",\n      \"en\",\n      iPadCaseLocalization\n    ),\n    getCartLocalization: getDefaultLocalization(\n      \"cart\",\n      \"en\",\n      iPadCaseLocalization\n    )\n  };\n\n  addProduct = (key, product, currency) =>\n    void this.setState(\n      ({\n        products: { [key]: cartProduct = { quantity: 0 }, ...restOfProducts }\n      }) => ({\n        products: {\n          ...restOfProducts,\n          [key]: {\n            ...product,\n            quantity: product.quantity + cartProduct.quantity\n          }\n        }\n      })\n    );\n\n  generateProductKey = (id, properties) =>\n    `${id}/${Object.entries(properties).join(\"_\")}`;\n\n  updateProduct = (key, updatedProduct) => void console.log(\":)\");\n\n  removeProduct = key => void console.log(\":C\");\n\n  render() {\n    const {\n      addProduct,\n      generateProductKey,\n      updateProduct,\n      removeProduct,\n      state\n    } = this;\n\n    const {\n      getProductLocalization,\n      getCheckoutButtonLocalization,\n      getCartLocalization,\n      products,\n      product\n    } = state;\n\n    const checkoutButtonElement = (\n      <CheckoutButtonComponent\n        grandTotal={500}\n        hidden={false}\n        checkoutURL=\"/to/my/checkout\"\n        currency=\"GBP\"\n        getLocalization={getCheckoutButtonLocalization}\n      />\n    );\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <form name=\"input\" method=\"POST\" action=\"https://formspree.io/f/xvovedjb\">\n          Subscribe(:: <input type=\"email\" name=\"_replyto\" placeholder=\"email\">\n          </input>\n          <input type=\"submit\" value=\"Send\"></input>\n        </form>\n        <div className=\"container\">\n        <ProductComponent\n          {...product}\n          checkoutButton={checkoutButtonElement}\n          onAddProduct={\n            addProduct\n            // Help product to get into the cart\n          }\n          generateProductKey={\n            generateProductKey\n            // create product key as you wish\n          }\n          getLocalization={getProductLocalization}\n        />\n\n        <CartComponent\n          products={\n            products\n            // Provide your own product's Object(Look at Products)\n          }\n          onUpdateProduct={\n            updateProduct\n            // Update something\n          }\n          getLocalization={getCartLocalization}\n          currency=\"GBP\"\n          onRemoveProduct={\n            removeProduct\n            // Remove something\n          }\n          checkoutButton={checkoutButtonElement}\n          isCartEmpty={false}\n          getLocalization={getCartLocalization}\n        />\n      </div>\n      </header>\n      {/* <div className=\"container\">\n        <ProductComponent\n          {...product}\n          checkoutButton={checkoutButtonElement}\n          onAddProduct={\n            addProduct\n            // Help product to get into the cart\n          }\n          generateProductKey={\n            generateProductKey\n            // create product key as you wish\n          }\n          getLocalization={getProductLocalization}\n        />\n\n        <CartComponent\n          products={\n            products\n            // Provide your own product's Object(Look at Products)\n          }\n          onUpdateProduct={\n            updateProduct\n            // Update something\n          }\n          getLocalization={getCartLocalization}\n          currency=\"GBP\"\n          onRemoveProduct={\n            removeProduct\n            // Remove something\n          }\n          checkoutButton={checkoutButtonElement}\n          isCartEmpty={false}\n          getLocalization={getCartLocalization}\n        />\n      </div> */}\n    </div>\n    );\n  }\n}\n\n// function App() {\n//   return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <form name=\"input\" method=\"POST\" action=\"https://formspree.io/f/xvovedjb\">\n    //       Subscribe(: <input type=\"email\" name=\"_replyto\" placeholder=\"email\">\n    //       </input>\n    //       <input type=\"submit\" value=\"Send\"></input>\n    //     </form>\n    //   </header>\n    // </div>\n//   );\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}