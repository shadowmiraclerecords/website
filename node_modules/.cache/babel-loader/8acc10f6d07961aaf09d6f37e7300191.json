{"ast":null,"code":"var _jsxFileName = \"/Users/ranesimons/Desktop/stuff/codes/website/website/src/About.js\";\nimport React from \"react\";\nimport DesktopScreenEPK from './DesktopScreenEPK';\nimport SmallScreenEPK from './SmallScreenEPK';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state);\n    };\n\n    this.state = {\n      isDesktopDisplay: false\n    };\n    this.changeHandler = this.changeHandler.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n    this.updateDisplayStyle = this.updateDisplayStyle.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateDisplayStyle();\n    console.log('sweet');\n    window.addEventListener(\"resize\", this.updateDisplayStyle);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDisplayStyle);\n  }\n\n  updateDisplayStyle() {\n    console.log('awesome');\n    this.setState({\n      isDesktopDisplay: window.innerWidth > 768\n    });\n    console.log(this.state);\n    console.log(window.innerWidth);\n  }\n\n  render() {\n    const {\n      isDesktopDisplay\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isDesktopDisplay && /*#__PURE__*/_jsxDEV(DesktopScreenEPK, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 30\n      }, this), !isDesktopDisplay && /*#__PURE__*/_jsxDEV(SmallScreenEPK, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default About;","map":{"version":3,"sources":["/Users/ranesimons/Desktop/stuff/codes/website/website/src/About.js"],"names":["React","DesktopScreenEPK","SmallScreenEPK","About","Component","constructor","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","state","isDesktopDisplay","bind","updateDisplayStyle","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4BnBC,aA5BmB,GA4BFC,CAAD,IAAO;AACrB,WAAKC,QAAL,CAAc;AAAC,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAkBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACD,KA9BkB;;AAAA,SAgCnBC,aAhCmB,GAgCHL,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACM,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD,KAnCkB;;AAEjB,SAAKA,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE;AADP,KAAb;AAIA,SAAKX,aAAL,GAAqB,KAAKA,aAAL,CAAmBY,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKN,aAAL,GAAqB,KAAKA,aAAL,CAAmBM,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,kBAAL;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKH,kBAAvC;AACD;;AAEDI,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,kBAA1C;AACD;;AAEDA,EAAAA,kBAAkB,GAAG;AACnBL,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAKP,QAAL,CAAc;AAACS,MAAAA,gBAAgB,EAAEI,MAAM,CAACI,UAAP,GAAoB;AAAvC,KAAd;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACI,UAAnB;AACD;;AAWDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA;AAAF,QAAuB,KAAKD,KAAlC;AACA,wBACE;AAAA,iBACGC,gBAAgB,iBAAI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADvB,EAEG,CAACA,gBAAD,iBAAqB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA9CiC;;AAiDpC,eAAef,KAAf","sourcesContent":["import React from \"react\";\nimport DesktopScreenEPK from './DesktopScreenEPK';\nimport SmallScreenEPK from './SmallScreenEPK';\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isDesktopDisplay: false\n    };\n\n    this.changeHandler = this.changeHandler.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n    this.updateDisplayStyle = this.updateDisplayStyle.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateDisplayStyle();\n    console.log('sweet');\n    window.addEventListener(\"resize\", this.updateDisplayStyle)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDisplayStyle)\n  }\n\n  updateDisplayStyle() {\n    console.log('awesome');\n    this.setState({isDesktopDisplay: window.innerWidth > 768})\n    console.log(this.state);\n    console.log(window.innerWidth);\n  }\n\n  changeHandler = (e) => {\n    this.setState({[e.target.name] : e.target.value});\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n    console.log(this.state);\n  }\n\n  render() {\n    const { isDesktopDisplay } = this.state;\n    return (\n      <div>\n        {isDesktopDisplay && <DesktopScreenEPK />}\n        {!isDesktopDisplay && <SmallScreenEPK />}\n      </div>\n    );\n  }\n}\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}